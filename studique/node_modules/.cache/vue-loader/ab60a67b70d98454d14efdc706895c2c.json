{"remainingRequest":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\src\\components\\Dashboard.vue?vue&type=style&index=0&id=3ce09a13&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\src\\components\\Dashboard.vue","mtime":1575478477706},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\css-loader\\dist\\cjs.js","mtime":1573679727181},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573679727621},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\postcss-loader\\src\\index.js","mtime":1573328016181},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574048464379},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573679726975},{"path":"C:\\Users\\jdavi\\Documents\\Github\\studique\\studique\\studique\\node_modules\\vue-loader\\lib\\index.js","mtime":1573679727621}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNhc2tRdWVzdGlvbiB7DQogIGRpc3BsYXk6IGdyaWQ7DQogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNmZyIDFmcjsNCiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA2ZnIgMWZyOw0KfQ0KI2xhYmVsIHsNCiAgcGFkZGluZzogNXB4Ow0KfQ0KI2NvbW1lbnRDYXJkIHsNCiAgd2lkdGg6IDEwMCU7DQp9DQoNCi5xdWVzdGlvbkNhcmQgew0KICBtYXJnaW4tdG9wOiA1cHg7DQogIHdpZHRoOiA5OCU7DQp9DQoNCiN1c2VybmFtZSB7DQogIHBhZGRpbmc6IDVweDsNCn0NCg0KI3F1ZXN0aW9uVGV4dEFyZWEgew0KICB3aWR0aDogMTAwJTsNCn0NCg0KI2Rhc2hib2FyZCB7DQogIGRpc3BsYXk6IGdyaWQ7DQogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmciAxZnI7DQp9DQoNCiNhc2tGb3JtIHsNCiAgZGlzcGxheTogZ3JpZDsNCiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0ZnIgMWZyOw0KICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciBhdXRvOw0KfQ0KDQojdGFnQ29sdW1uIHsNCiAgYmFja2dyb3VuZDogbGlnaHRncmV5Ow0KfQ0KDQojZW1wdHlDb2x1bW4gew0KICBiYWNrZ3JvdW5kOiBsaWdodGdyZXk7DQp9DQoNCiNxdWVzdGlvbiB7DQogIGJvcmRlci1zdHlsZTogc29saWQ7DQogIGJvcmRlcjogMnB4Ow0KICBib3JkZXItY29sb3I6IGJsYWNrOw0KfQ0KDQojYXNrQnV0dG9uIHsNCiAgbWFyZ2luOiA1cHg7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQoNCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsNCiAgI2VtcHR5Q29sdW1uIHsNCiAgICBkaXNwbGF5OiBub25lOw0KICB9DQogICN0YWdDb2x1bW4gew0KICAgIGRpc3BsYXk6IG5vbmU7DQogIH0NCg0KICAjYXNrRm9ybSB7DQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDRmciAxZnI7DQogICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgYXV0bzsNCiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JheTsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgcG9zaXRpb246c3RpY2t5Ow0KICAgIHRvcDogMDsNCiAgfQ0KICAjZGFzaGJvYXJkIHsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0bzsNCiAgfQ0KICAjZGVsZXRlQnV0dG9uIHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0Ow0KICB9DQp9DQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"dashboard\">\r\n      <div id=\"tagColumn\"></div>\r\n      <div>\r\n        <div id=\"askForm\">\r\n          <v-container fluid>\r\n            <v-textarea\r\n              label= \"Ask A Question\"\r\n              id =\"questionTextArea\"\r\n              v-model=\"question\"\r\n              clearable\r\n              clear-icon=\"x\"\r\n              auto-grow\r\n              rounded\r\n              outlined\r\n              rows=\"1\"\r\n            ></v-textarea>\r\n          </v-container>\r\n          <v-btn color=\"primary\" id=\"askButton\" @click.native=\"askButton\">Ask</v-btn>\r\n        </div>\r\n        <v-divider></v-divider>\r\n        <div id=\"cards\">\r\n          <v-list-item v-for=\"(myQuestion,pos) in myQuestion.slice().reverse()\" :key=\"pos\">\r\n            <v-card class=\"questionCard\" outlined :elevation=\"3\">\r\n              <v-card-subtitle id=\"username\">{{myQuestion.user}}\r\n                <v-btn v-if=\"myQuestionID(myQuestion.userId)\" color=\"red\" id=\"deleteButton\" @click=\"deletePost(myQuestion.mykey)\" small icon rounded right>X</v-btn>\r\n              </v-card-subtitle>\r\n              \r\n              <v-card-text>\r\n                <div\r\n                  class=\"text--primary\"\r\n                >{{myQuestion.question}}\r\n                </div>\r\n                \r\n              </v-card-text>\r\n            \r\n              <v-expansion-panels>\r\n                <v-expansion-panel>\r\n                  <v-expansion-panel-header>Responses</v-expansion-panel-header>\r\n                  <v-expansion-panel-content>\r\n                    <v-list-item v-for=\"(myComment, pos) in myQuestion.comments\" :key=\"pos\">\r\n                      <v-card id=\"commentCard\">\r\n                      <v-card-subtitle id=\"commentUser\">{{myComment.user}}</v-card-subtitle>\r\n                      <v-card-text>\r\n                        <div\r\n                          class=\"text--primary\">\r\n                          {{myComment.comment}}</div>\r\n                      </v-card-text>\r\n                      </v-card>\r\n                    </v-list-item>\r\n                    <v-card-actions>\r\n                      <v-container fluid>\r\n                        <v-textarea\r\n                          v-model=\"commentInput\"\r\n                          label=\"Answer Question\"\r\n                          clearable\r\n                          clear-icon=\"x\"\r\n                          auto-grow\r\n                          rounded\r\n                          outlined\r\n                          rows=\"1\"\r\n                          dense\r\n                          hide-details\r\n                          v-bind:id=\"myQuestion.mykey\"\r\n                        ></v-textarea>\r\n                      </v-container>\r\n                      <v-btn color=\"primary\"  @click=\"addComment(myQuestion.mykey)\">Respond</v-btn>\r\n                    </v-card-actions>\r\n                  </v-expansion-panel-content>\r\n                </v-expansion-panel>\r\n              </v-expansion-panels>\r\n            </v-card>\r\n          </v-list-item>\r\n        </div>\r\n      </div>\r\n      <div id=\"emptyColumn\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AppDB, AppAUTH } from \"../db-init.js\";\r\n\r\nexport default {\r\n  data: function() {\r\n    return {\r\n      question: \"\",\r\n      commentInput: \"\",\r\n      myQuestion: [],\r\n      myComment: []\r\n    };\r\n  },\r\n  methods: {\r\n    askButton() {\r\n      if(this.question != \"\") {\r\n        AppDB.ref(\"posts\")\r\n        .push()\r\n        .set({\r\n          userId: AppAUTH.currentUser.uid,\r\n          user: AppAUTH.currentUser.displayName,\r\n          question: this.question\r\n        });\r\n      }\r\n      \r\n    },\r\n\r\n    myQuestionID(questionUID) {\r\n      if(questionUID == AppAUTH.currentUser.uid)\r\n        return true;\r\n      else\r\n        return false;\r\n    },\r\n\r\n    fbAddHandler(snapshot) {\r\n      const item = snapshot.val();\r\n      this.myQuestion.push({ ...item, mykey: snapshot.key });\r\n    },\r\n    fbRemoveListener(snapshot) {\r\n      /* snapshot.key will hold the key of the item being REMOVED */\r\n      this.myQuestion = this.myQuestion.filter(z => z.mykey != snapshot.key);\r\n    },\r\n    deletePost(questionKey) {\r\n      if(confirm(\"Remove this question?\")){\r\n        AppDB.ref(\"posts\")\r\n          .child(questionKey)\r\n          .remove();\r\n      }\r\n    },\r\n    addComment(questionID) {\r\n      if(this.commentInput != \"\"){\r\n        AppDB.ref(\"posts\")\r\n        .child(questionID)\r\n        .child(\"comments\")\r\n        .push()\r\n        .set({\r\n          user: AppAUTH.currentUser.displayName,\r\n          comment: this.commentInput\r\n        });\r\n\r\n        this.$router.go();\r\n      } \r\n    }\r\n  },\r\n  mounted() {\r\n    AppDB.ref(\"posts\").on(\"child_added\", this.fbAddHandler);\r\n    AppDB.ref(\"posts\").on(\"child_removed\", this.fbRemoveListener);\r\n  },\r\n  beforeDestroy() {\r\n    AppDB.ref(\"posts\").off(\"child_added\", this.fbAddHandler);\r\n    AppDB.ref(\"posts\").off(\"child_removed\", this.fbRemoveListener);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#askQuestion {\r\n  display: grid;\r\n  grid-template-columns: 6fr 1fr;\r\n  grid-template-rows: 6fr 1fr;\r\n}\r\n#label {\r\n  padding: 5px;\r\n}\r\n#commentCard {\r\n  width: 100%;\r\n}\r\n\r\n.questionCard {\r\n  margin-top: 5px;\r\n  width: 98%;\r\n}\r\n\r\n#username {\r\n  padding: 5px;\r\n}\r\n\r\n#questionTextArea {\r\n  width: 100%;\r\n}\r\n\r\n#dashboard {\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr 1fr;\r\n}\r\n\r\n#askForm {\r\n  display: grid;\r\n  grid-template-columns: 4fr 1fr;\r\n  grid-template-rows: 1fr auto;\r\n}\r\n\r\n#tagColumn {\r\n  background: lightgrey;\r\n}\r\n\r\n#emptyColumn {\r\n  background: lightgrey;\r\n}\r\n\r\n#question {\r\n  border-style: solid;\r\n  border: 2px;\r\n  border-color: black;\r\n}\r\n\r\n#askButton {\r\n  margin: 5px;\r\n  margin-top: 20px;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  #emptyColumn {\r\n    display: none;\r\n  }\r\n  #tagColumn {\r\n    display: none;\r\n  }\r\n\r\n  #askForm {\r\n    display: grid;\r\n    grid-template-columns: 4fr 1fr;\r\n    grid-template-rows: 1fr auto;\r\n    border-bottom: 2px solid gray;\r\n    padding: 5px;\r\n    position:sticky;\r\n    top: 0;\r\n  }\r\n  #dashboard {\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n  }\r\n  #deleteButton {\r\n    justify-content: right;\r\n  }\r\n}\r\n</style>\r\n"]}]}